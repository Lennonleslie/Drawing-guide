import{_ as e,p as d,q as l,a1 as a}from"./framework-96b046e1.js";const t="/assets/01三维示意图-af8e8c21.png",r="/assets/02原点坐标图-417fc2fd.png",n={},i=a('<h1 id="维度基础" tabindex="-1"><a class="header-anchor" href="#维度基础" aria-hidden="true">#</a> 维度基础</h1><h2 id="空间概念" tabindex="-1"><a class="header-anchor" href="#空间概念" aria-hidden="true">#</a> 空间概念</h2><p>学习此软件，需要有一定的数学三维空间概念基础。</p><h3 id="维度入门" tabindex="-1"><a class="header-anchor" href="#维度入门" aria-hidden="true">#</a> 维度入门</h3><p>XYZ三轴方向。首先看一个图</p><p><img src="'+t+'" alt="../picture/backend-data/01三维示意图.png"></p><p>猴子模型</p><table><thead><tr><th>对应方向</th><th>X轴（红线）</th><th>Y轴（绿线）</th><th>Z轴（蓝线）隐藏</th></tr></thead><tbody><tr><td>正值</td><td>右面（红色耳朵）</td><td>背面（后脑勺）</td><td>上面（头顶）</td></tr><tr><td>负值</td><td>左面（蓝色耳朵）</td><td>正面（鼻子）</td><td>下面（下巴）</td></tr></tbody></table><hr><h3 id="三维属性" tabindex="-1"><a class="header-anchor" href="#三维属性" aria-hidden="true">#</a> 三维属性</h3><p>那么我们需要了解一个物体具备三个空间概念。</p><p>这三个概念都具备三个轴的属性，只是运用的属性不同。</p><ul><li>尺寸 <ul><li>尺寸决定了物体的大小</li></ul></li><li>位置 <ul><li>位置决定了物体的摆放</li></ul></li><li>旋转 <ul><li>旋转决定了物体的朝向</li></ul></li></ul><h2 id="空间进阶" tabindex="-1"><a class="header-anchor" href="#空间进阶" aria-hidden="true">#</a> 空间进阶</h2><h3 id="尺寸篇" tabindex="-1"><a class="header-anchor" href="#尺寸篇" aria-hidden="true">#</a> 尺寸篇</h3><p>这里一般设计师不需要深刻记忆，只需要知道有这么一个概念即可，这个是为了后续铺垫的基础知识。</p><p>正常情况下，物体的正面都与我们第一视角相对。</p><blockquote><ul><li><p>X轴一般对应物体的<strong>宽度</strong>，一般参数中是<code>width</code>，简称---<code>W</code></p></li><li><p>Y轴一般对应物体的<strong>深度</strong>，一般参数中是<code>depth</code>，简称---<code>D</code></p></li><li><p>Z轴一般对应物体的<strong>高度</strong>，一般参数中是<code>height</code>，简称---<code>H</code></p></li></ul></blockquote><p>市面常见软件有两种修改方式，一种是基于物体中心，像对应轴的正负方向形变。</p><p>另一种是，基于物体的某个面，向另一个方向形变。本质上没有区别。只是计算方式和坐标方式的不同。</p><h3 id="位置篇" tabindex="-1"><a class="header-anchor" href="#位置篇" aria-hidden="true">#</a> 位置篇</h3><p>这里一般设计师不需要深刻记忆，只需要知道有这么一个概念即可，这个是为了后续铺垫的基础知识。</p><blockquote><ul><li><p>X轴一般对应物体的<strong>左右位置</strong></p></li><li><p>Y轴一般对应物体的<strong>前后位置</strong></p></li><li><p>Z轴一般对应物体的<strong>上下位置</strong></p></li></ul></blockquote><p>位置本身计算并不困难，但是位置计算一般需要叠加尺寸，另外位置在不同软件的相对中心点不同。导致了计算公式的复杂程度也有不同。</p><blockquote><p>中间计算：</p><blockquote><p>一般为物体中心点，为位置的位置坐标，常用在3D软件中，因物体外观不规则，球形、类球形计算具有一定优势。</p><p>例如，一个半径1000㎜的球体，一个位置0的墙面。那么我们要输入1000m的位置坐标值，球体会刚好和墙面接触。</p><p><img src="'+t+'" alt="../picture/backend-data/01三维示意图.png"></p><p>就像这只猴子中心的那个准心一样。</p></blockquote><p>指定点计算（左下后）：</p><blockquote><p>一般为物体的左面下面后面，三面交汇处的点。</p><p>这个视图是柜体的背面，观察下方的准心处。如果柜体面对我们，这个点就位于物体的坐下后。这个一般在矩形物体中，具有得天独厚的计算优势。</p><p><img src="'+r+'" alt="../picture/backend-data/02原点坐标图.png"></p></blockquote></blockquote><p>位置的计算方式不同不影响逻辑。也只是计算方式的优劣。区别不大。</p><p>但是大多数软件的空间坐标是根据上方猴头图的右上角的坐标一样，Y+方向是在背面（我们所谓的背面）。所以Y轴越大越往后。Y-方向则距离我们更近一些。</p><p>其实这里并没有错误，错误的是一个习惯和显示的问题。因为我们默认习惯于构建的物体像照镜子一样面对我们。所以我们一般会把物体的背面，放在我们第一眼看不到的正面，导致了Y轴正负方向与我们第一时间自以为的方向产生了差异。</p><div class="custom-container danger"><p class="custom-container-title">DANGER</p><p>警告：尺寸值的增加和位置值的增加是完全不同的。一定要区分开！！</p></div><table><thead><tr><th style="text-align:center;">影响</th><th style="text-align:center;">正 方 向 加 大</th><th style="text-align:center;">正 方 向 加 大</th><th style="text-align:center;">负 方 向 减 小</th><th style="text-align:center;">负 方 向 减 小</th></tr></thead><tbody><tr><td style="text-align:center;">轴向</td><td style="text-align:center;">尺寸</td><td style="text-align:center;">位置</td><td style="text-align:center;">尺寸</td><td style="text-align:center;">位置</td></tr><tr><td style="text-align:center;">X方向</td><td style="text-align:center;">宽度变大</td><td style="text-align:center;">物体左移</td><td style="text-align:center;">宽度变小</td><td style="text-align:center;">物体左移</td></tr><tr><td style="text-align:center;">Y方向</td><td style="text-align:center;">深度变大</td><td style="text-align:center;">物体后移</td><td style="text-align:center;">深度变小</td><td style="text-align:center;">物体前移</td></tr><tr><td style="text-align:center;">Z方向</td><td style="text-align:center;">高度变大</td><td style="text-align:center;">物体上移</td><td style="text-align:center;">高度变小</td><td style="text-align:center;">物体下移</td></tr></tbody></table><h3 id="旋转篇" tabindex="-1"><a class="header-anchor" href="#旋转篇" aria-hidden="true">#</a> 旋转篇</h3><p>一般针对不同角度的设计需求。</p><p>此知识点设计几乎用不上，可以直接跳过。</p><blockquote><p>首先是上下观念，因为上下这个观点在地球范围内，基本上没有异议。所以个体轴一般的Z轴和世界轴通用。</p><p>其次是前后概念，前后概念因为你只要面对哪边，哪边就为前面，并且它永远和Z轴交叉呈90度。如果平行与Z轴，则这个物体Z轴和Y轴重叠使用。</p><p>最后就是左右概念，这个根本用不上世界坐标，它属于目标对象自己的坐标。</p><p>这个旋转轴就像是一个在深海潜水。你唯一可以参照世界的就是上下，其次根据上下我们判断前方。但是我们侧着游泳，或者斜躺，亦或者其他形态。</p><p>我们的左右相对我们是永恒不变的。</p><p><strong>总结</strong></p><ol><li>轴只有三个且相互之间绝对垂直</li><li>尺寸和位置和旋转是独立的。</li><li>逻辑上的认知误差是行业误差。不是逻辑错误。</li></ol></blockquote>',34),c=[i];function p(s,o){return d(),l("div",null,c)}const g=e(n,[["render",p],["__file","维度基础.html.vue"]]);export{g as default};
